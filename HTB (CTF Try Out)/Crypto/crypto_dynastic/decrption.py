def to_identity_map(a):
    return ord(a) - 0x41

def from_identity_map(a):
    return chr(a % 26 + 0x41)

def decrypt(c):
    m = ''
    for i in range(len(c)):
        ch = c[i]
        if not ch.isalpha():
            # If it's not an alphabet character, keep it unchanged
            ech = ch
        else:
            chi = to_identity_map(ch)
            # Reverse the encryption by subtracting the index
            original_value = chi - i
            # Ensure the value wraps around in the 0-25 range
            if original_value < 0:
                original_value += 26
            ech = from_identity_map(original_value)
        m += ech
    return m

# Encrypted message
ciphertext = "DJF_CTA_SWYH_NPDKK_MBZ_QPHTIGPMZY_KRZSQE?!_ZL_CN_PGLIMCU_YU_KJODME_RYGZXL"

# Decrypting the ciphertext
decrypted_message = decrypt(ciphertext)

# Output the decrypted message
print(decrypted_message)
